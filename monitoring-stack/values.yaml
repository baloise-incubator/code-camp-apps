# cluster
clusterName: incubator
responsible: codecamp@baloise.dev
routeDomain: apps.baloise.dev
clusterEnvironment: nonprod
appEnvironment: nonprod
infraCluster: true

# monitoring
enableMonitoring: true
enablespringBootMonitoring: true
clusterMonitoringNamespace: platform-monitoring
alertmanager:
  mailAlerts: false
  teams:
    enabled: false
thanosQuerier:
  enableLocalClusterMonitoring: true
  clusterTargets: {}

# Loki
loki-distributed:
  global:
    dnsService: dns-default
    dnsNamespace: openshift-dns
  loki:
    podSecurityContext:
      fsGroup: 1001050000
      runAsGroup: 1001050000
      runAsUser: 1001050000
    containersecurityContext:
      runAsUser: 1001050000
      runAsGroup: 1001050000
  gateway:
    podSecurityContext:
      fsGroup: 1001050000
      runAsGroup: 1001050000
      runAsUser: 1001050000
    containersecurityContext:
      runAsUser: 1001050000
      runAsGroup: 1001050000

# Tempo
tempo-distributed:
  traces:
    otlp:
      grpc:
        enabled: true
  minio:
    enabled: true
    podSecurityContext:
      enabled: false
    securityContext:
      enabled: false
  tempo:
    podSecurityContext:
      fsGroup: 1001050000
    securityContext:
      runAsUser: 1001050000
      runAsGroup: 1001050000

pyroscope:
  pyroscope:
    podSecurityContext:
      fsGroup: 1001050000
    securityContext:
      runAsUser: 1001050000
      runAsGroup: 1001050000
    components:
      querier:
        kind: Deployment
        replicaCount: 3
        resources:
          limits:
            memory: 1Gi
          requests:
            memory: 256Mi
            cpu: 1
      query-frontend:
        kind: Deployment
        replicaCount: 2
        resources:
          limits:
            memory: 1Gi
          requests:
            memory: 256Mi
            cpu: 100m
      query-scheduler:
        kind: Deployment
        replicaCount: 2
        resources:
          limits:
            memory: 1Gi
          requests:
            memory: 256Mi
            cpu: 100m
      distributor:
        kind: Deployment
        replicaCount: 2
        resources:
          limits:
            memory: 1Gi
          requests:
            memory: 256Mi
            cpu: 500m
      ingester:
        kind: StatefulSet
        replicaCount: 3
        terminationGracePeriodSeconds: 600
        resources:
          limits:
            memory: 16Gi
          requests:
            memory: 8Gi
            cpu: 1
      store-gateway:
        kind: StatefulSet
        replicaCount: 3
        persistence:
          # The store-gateway needs not need persistent storage, but we still run it as a StatefulSet
          # This is to avoid having blocks of data being
          enabled: false
        resources:
          limits:
            memory: 16Gi
          requests:
            memory: 8Gi
            cpu: 1
    rbac:
      create: false
  agent:
    enabled: false
  minio:
    enabled: true
